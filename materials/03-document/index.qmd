---
title: "03 Quarto Document using `plamerpenguins`"
subtitle: "Notebooks for Academics"
description: "`palmerpenguins` is a great dataset for data exploration & visualization"
author: "Carlos Granell"
date: last-modified
date-format: "MMM D, YYYY"
categories: [guided-exercise]
image: featured.png
fields: [image, title, subtitle, reading-time, categories, description, date, abstract]
code-overflow: wrap
bibliography: references.bib
---


### Create an RStudio Project on Posit Cloud using an existing template

- In **Your Workspace**, click *New Project > New RStudio Project*
- Select *File > New File > Quarto Document...* to create the file `notebook.qmd`
- Open it and delete all the content of the body section

### Structure of the notebook using markdown
- Write main headings ('##'): 

    - Introduction
    - Data & methods
    - Exploratory analysis
    - Conclusion
    - References
    
- Add YAML options for **authoring** and **table of contents**

````{.markdown filename="YAML header: authoring and table of content"}
---
title: "Notebook using `palmerpenguins`"
author: "Carlos Granell"
description: "`palmerpenguins` is a great dataset for data exploration & visualization"
date: "04/20/2024"
format: 
  html:
    toc: true
    toc-location: left
    toc-title: Contents
---
````

- Numbering sections:

    - Add YAML option `number-sections: true`
    - Add "{.unnumbered}" next to References section to make it non-numbered section
    
````{.markdown filename="Body: Non-numbered section"}
## References {.unnumbered}    
````
    
    
### Set up code libraries    

- Select *File > New File > R Script* to create the file `install.R`
- Add libraries to use in the notebook


````{.r filename="install.R"}
install.packages("knitr")
install.packages("rmarkdown")
install.packages("palmerpenguins")
install.packages("tidyverse")
install.packages("gt")
````

- Open the R Script and run it
- Add code chunk in the `notebook.qmd`

````{.r filename="Body: 'setup' chuck"}
```{{r}}
#| label: setup
#| echo: false
#| warning: false

library(tidyverse) # tidy data management. Similar to python's pandas
library(palmerpenguins) # our working dataset
library(gt)  # tabular data

```
````

```{r}
#| label: setup
#| echo: false
#| warning: false

library(palmerpenguins) # our working dataset
```

### Citations 
- Select *File > New File > Text File* to create the file `references.bib`
- Add A YAML options to support citations: `bibliography: references.bib` 
- Open **Console** and type `citation("palmerpenguins")`. Copy and paste the bib entry into  `reference.bib`

### Write the Introduction section

::: {.panel-tabset}
## Raw text

This notebook explores the palmerpenguins dataset as a Quarto (http://quarto.org) document. The dataset comes in its own package, so we install the palmerpenguins package.

## Final result

This notebook explores the **palmerpenguins** dataset as a [Quarto](http://quarto.org) document. The dataset comes in its own package, so we install the `palmerpenguins` package [@horst2020].

:::

- Check [Citations & Footnotes](https://quarto.org/docs/authoring/footnotes-and-citations.html) for help and look at the **References** section once you render the notebook

### Write Dataset section

- Add a subheading "Dataset" (###) to the "Dataset & Methods" section

::: {.panel-tabset}
## Raw text

Data were collected and made available by Dr. Kristen Gorman (https://www.uaf.edu/cfos/people/faculty/detail/kristen-gorman.php) and the Palmer Station, Antarctica LTER, a member of the Long Term Ecological Research Network (https://lternet.edu/).

The palmerpenguins package contains two datasets:

-   penguins: is a simplified version of the raw data
-   penquings_raw: contains all the variables and original names

In this notebook we are going to use the penguins dataset, which contains the following **8** variables are: species, island, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, year.


## Final result

Data were collected and made available by [Dr. Kristen Gorman](https://www.uaf.edu/cfos/people/faculty/detail/kristen-gorman.php) and the **Palmer Station, Antarctica LTER**, a member of the [Long Term Ecological Research Network](https://lternet.edu/).

The `palmerpenguins` package contains two datasets:

-   `penguins`: is a simplified version of the raw data
-   `penquings_raw`: contains all the variables and original names

In this notebook we are going to use the `penguins` dataset, which contains the following **`r ncol(penguins)`** variables:  

```{r}
#| label: data_structure
#| echo: false
colnames(penguins)
```

:::

- Use of [inline expressions](https://quarto.org/docs/computations/inline-code.html)
- Add a table & reference to the table. Check [Tables](https://quarto.org/docs/authoring/tables.html)
- Add a figure and reference to the figure. Check [Figures](https://quarto.org/docs/authoring/figures.html)

### Write Methods section

- Add a subheading "Methods" (###) to the "Dataset & Methods" section


::: {.panel-tabset}
## Raw text

For data manipulation, we use the tidyverse meta package. For visualization purpose, we use ggplot2 package and the gt package.

The ggplot2 package, which is already included in the tidyverse, is an R package to create visualisation using the Grammar of Graphics (https://www.amazon.com/Grammar-Graphics-Statistics-Computing/dp/0387245448), originally created by Leland Wilkinson.

The gt package offers a different and easy-to-use set of functions that helps us build display tables from tabular data. The gt philosophy states that a comprehensive collection of table parts can be used to create a broad range of functional tables. The output formats that gt currently supports are HTML, LaTeX, and RTF.

## Final result

For data manipulation, we use the `tidyverse` meta package [@wickham2019]. For visualization purpose, we use `ggplot2` package [@wickham2016] and the `gt` package [@iannone2024].

The `ggplot2` package, which is already included in the `tidyverse`, is an R package to create visualisation using the **[Grammar of Graphics](https://www.amazon.com/Grammar-Graphics-Statistics-Computing/dp/0387245448)**, originally created by Leland Wilkinson.

The `gt` package offers a different and easy-to-use set of functions that helps us build display tables from tabular data. The `gt` philosophy states that a comprehensive collection of table parts can be used to create a broad range of functional tables. The output formats that `gt` currently supports are HTML, LaTeX, and RTF.

:::

### Write Exploratory analysis section

- Explanation in class: code chucks to produce output figures, YAML options for [code execution](https://quarto.org/docs/computations/execution-options.html), and [freeze](https://quarto.org/docs/projects/code-execution.html). 

### Write Conclusions section


::: {.panel-tabset}
## Raw text

This notebook demonstrates that the palmerpenguins package is a great data set to get started with computational notebooks with Quarto Document (https://quarto.org/docs/output-formats/html-basics.html). We have learned YAML options (table of content, section numbering, for HTML & PDF output,  dhow to create content with markdown (headings, tables, figures, citations, cross references, margin content), execute code chucks, display code outputs, and specify options for code chunks.

## Final result

This notebook demonstrates that the `palmerpenguins` package is a great data set to get started with computational notebooks with [Quarto Document](https://quarto.org/docs/output-formats/html-basics.html). We have learned YAML options (table of content, section numbering, for HTML & PDF output,  dhow to create content with markdown (headings, tables, figures, citations, cross references, margin content), execute code chucks, display code outputs, and specify options for code chunks.

:::

### Support PDF format

- Add YAML options for **PDF**

````{.markdown filename="YAML header: PDF output format"}
---
format: 
  html:
    toc: true
    toc-location: left
    toc-title: Contents
  pdf:
    toc: true
    colorlinks: true
---
````

- `tinytext` is required to compile PDF documents. Use the following command:

````{.bash filename="Terminal"}
quarto install tinytex
```` 

### References

